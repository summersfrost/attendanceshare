/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package add;

import dbcon.DB;
import dbcon.StudentDao;
import dbcon.inputFormatting;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class autoAdd1 extends javax.swing.JFrame {

    /**
     * Creates new form autoAdd
     */
    
    ArrayList<String> rows=new ArrayList<>();
    public autoAdd1() {
        
        initComponents();
                // Update the label with the current time
        SimpleDateFormat dateFormat = new SimpleDateFormat("MMMM-dd-YYYY");
        
          String currentTime = dateFormat.format(new Date());
          timeLabel.setText(currentTime);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(); // Create a DefaultComboBoxModel
DefaultComboBoxModel<String> comboBoxModel1 = new DefaultComboBoxModel<>(); // Create a DefaultComboBoxModel

try {
    // Establish a database connection
    Connection conn = DB.getConnection();
    Statement stmt = conn.createStatement();

    // Execute the SQL query
    ResultSet resultSet = stmt.executeQuery("SELECT classIdentity FROM subjects");

    // Populate the comboBoxModel with data from the database
    while (resultSet.next()) {
        String subjName = resultSet.getString("classIdentity");
        comboBoxModel.addElement(subjName);
     
          
    }

    // Set the model for your JComboBox
    jComboBox1.setModel(comboBoxModel);
 

    // Close the database connection
    conn.close();
} catch (Exception e) {
    e.printStackTrace();
}
try {
    // Establish a database connection
    Connection conn = DB.getConnection();
    Statement stmt = conn.createStatement();

    // Execute the SQL query
    ResultSet resultSet = stmt.executeQuery("SELECT name FROM admin");

    // Populate the comboBoxModel with data from the database
    while (resultSet.next()) {
        String name = resultSet.getString("name");
    
          comboBoxModel1.addElement(name);
          
    }

    // Set the model for your JComboBox
    jComboBox2.setModel(comboBoxModel1);
 

    // Close the database connection
    conn.close();
} catch (Exception e) {
    e.printStackTrace();
}



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        students = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        sub1 = new javax.swing.JTextField();
        addedby = new javax.swing.JTextField();
        timeLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        students.setColumns(20);
        students.setRows(5);
        jScrollPane1.setViewportView(students);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(0, 0, 0));
        timeLabel.setText("jLabel1");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        output.setEditable(false);
        output.setColumns(20);
        output.setRows(5);
        jScrollPane2.setViewportView(output);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(sub1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(addedby, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 262, Short.MAX_VALUE)
                .addComponent(timeLabel)
                .addGap(191, 191, 191))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(75, 75, 75))
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sub1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addedby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
            // TODO add your handling code here:
          String selectedItem = (String) jComboBox1.getSelectedItem();
          sub1.setText(selectedItem);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
              String selectedItem = (String) jComboBox2.getSelectedItem();
          addedby.setText(selectedItem);
    }//GEN-LAST:event_jComboBox2ActionPerformed
    String result;
 String[] parts;
 String yrlvl;
 String subj2="" , subj3="", subj4="";
    String savepath1="C:\\Documents\\CompesaEventHandler\\CompesaAutomatedEventsHandler\\img\\img\\cpelogo.png";
         String extension;
        String firstName;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO: Add your handling code here

String text = students.getText();
String[] inputRows = text.split("\n");
ArrayList<String> rows = new ArrayList<String>();

for (String row : inputRows) {
    rows.add(row);
}

for (String row : rows) {
    System.out.println(row + "\n");
    String result = row;
    String[] parts = result.split(" ");

 
        
        // Assign each part to another string depending on some condition
        String part1 = parts[0];        // First part
        String studentID = parts[1];    // Second part
        String lastName = parts[2].replace(",", ""); // Third part
        String firstName=""; 
        String middleInitial="";
        String yearlvl="";
        String subject = sub1.getText();
        String addedBy = addedby.getText();
        String extension = "";
        String mobileno = "";
        String qrpath = "";
        String email = "";
        
        
        System.out.println(parts.length);
        
        if (parts.length == 7) {
        // Assign each part to another string depending on some condition
 
        studentID = parts[1];    // Second part
         lastName = parts[2].replace(",", ""); // Third part
        firstName = parts[3];
         middleInitial = "";
        yearlvl = parts[6];
         subject = sub1.getText();
         addedBy = addedby.getText();
        extension = "";
        mobileno = "";
        qrpath = "";
        email = "";

        Random random = new Random();
        // Generate a 5-digit combination for RFID
        int digit1 = random.nextInt(10);
        int digit2 = random.nextInt(10);
        int digit3 = random.nextInt(10);
        int digit4 = random.nextInt(10);
        int digit5 = random.nextInt(10);
        int rfid = digit5 * 10000 + digit1 * 1000 + digit2 * 100 + digit3 * 10 + digit4;

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");
        Date currentDate = new Date();
        String formattedDate = dateFormat.format(currentDate);
        String formattedTime = timeFormat.format(currentDate);

        if (yearlvl.equals("1")) {
            yrlvl = "1st Year";
         
        }else if (yearlvl.equals("2")){
                yrlvl = "2nd Year";
        }
        else if (yearlvl.equals("3")){
                yrlvl = "3rd Year";
        }
        else if (yearlvl.equals("4")){
                yrlvl = "4th Year";
        }
          inputFormatting nameFormat = new inputFormatting();
        firstName = nameFormat.capitalizeWords(firstName);
        lastName = nameFormat.capitalizeWords(lastName);
        
  /* int rowsAffected = StudentDao.save(studentID, firstName, middleInitial, lastName, extension, email, mobileno, qrpath, addedBy, formattedDate, formattedTime, String.valueOf(rfid), savepath1, yrlvl, subject, subj2, subj3, subj4);
            
            if (rowsAffected > 0) {
            

                output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Added Succesfully \n") ;
            } else {
              output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Already exist\n") ;
            }*/
  System.out.println("part1: " + part1);
System.out.println("studentID: " + studentID);
System.out.println("lastName: " + lastName);
System.out.println("firstName: " + firstName);
System.out.println("middleInitial: " + middleInitial);
System.out.println("yearlvl: " + yearlvl);
System.out.println("subject: " + subject);
System.out.println("addedBy: " + addedBy);
System.out.println("extension: " + extension);
System.out.println("mobileno: " + mobileno);
System.out.println("qrpath: " + qrpath);
System.out.println("email: " + email);

    
    }
        if (parts.length==8){
                  yearlvl = parts[7];
                     if (yearlvl.equals("1")) {
            yrlvl = "1st Year";
         
        }else if (yearlvl.equals("2")){
                yrlvl = "2nd Year";
        }
        else if (yearlvl.equals("3")){
                yrlvl = "3rd Year";
        }
        else if (yearlvl.equals("4")){
                yrlvl = "4th Year";
        }
        if (parts[3].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[3].replace(",","");
    System.out.println("extension part3: " + extension);
} else{
       firstName=parts[3];
          System.out.println("Firstname part3: " + firstName); }




if (parts[4].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[4];
    System.out.println("middleInitial part4: " + middleInitial);
}  else  if (parts[4].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[4].replace(",","");
    System.out.println("extension 5: " + extension);
} else if (!parts[4].matches("[A-Z]"))
 {
   firstName +=" "+ parts[4];
    System.out.println("First Name part4: " + firstName);
}

if (parts[5].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[5];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[5].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[5].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[5].matches("[A-Z]"))
 {
   firstName +=" "+ parts[5];
    System.out.println("First Name5: " + firstName);
}
     
      

        Random random = new Random();
        // Generate a 5-digit combination for RFID
        int digit1 = random.nextInt(10);
        int digit2 = random.nextInt(10);
        int digit3 = random.nextInt(10);
        int digit4 = random.nextInt(10);
        int digit5 = random.nextInt(10);
        int rfid = digit5 * 10000 + digit1 * 1000 + digit2 * 100 + digit3 * 10 + digit4;

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");
        Date currentDate = new Date();
        String formattedDate = dateFormat.format(currentDate);
        String formattedTime = timeFormat.format(currentDate);

        if (yearlvl.equals("1")) {
            yrlvl = "1st Year";
         
        }else if (yearlvl.equals("2")){
                yrlvl = "2nd Year";
        }
        else if (yearlvl.equals("3")){
                yrlvl = "3rd Year";
        }
        else if (yearlvl.equals("4")){
                yrlvl = "4th Year";
        }
          inputFormatting nameFormat = new inputFormatting();
        firstName = nameFormat.capitalizeWords(firstName);
        lastName = nameFormat.capitalizeWords(lastName);
          System.out.println("part1: " + part1);
System.out.println("studentID: " + studentID);
System.out.println("lastName: " + lastName);
System.out.println("firstName: " + firstName);
System.out.println("middleInitial: " + middleInitial);
System.out.println("yearlvl: " + yrlvl);
System.out.println("subject: " + subject);
System.out.println("addedBy: " + addedBy);
System.out.println("extension: " + extension);
System.out.println("mobileno: " + mobileno);
System.out.println("qrpath: " + qrpath);
System.out.println("email: " + email);

   //int rowsAffected = StudentDao.save(studentID, firstName, middleInitial, lastName, extension, email, mobileno, qrpath, addedBy, formattedDate, formattedTime, String.valueOf(rfid), savepath1, yrlvl, subject, subj2, subj3, subj4);
            
          /*  if (rowsAffected > 0) {
            

                output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Added Succesfully \n") ;
            } else {
              output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Already exist\n") ;
            }
   
    */
    
  
}
        
           if (parts.length==9){
                  yearlvl = parts[8];
                     if (yearlvl.equals("1")) {
            yrlvl = "1st Year";
         
        }else if (yearlvl.equals("2")){
                yrlvl = "2nd Year";
        }
        else if (yearlvl.equals("3")){
                yrlvl = "3rd Year";
        }
        else if (yearlvl.equals("4")){
                yrlvl = "4th Year";
        }
        if (parts[3].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[3].replace(",","");
    System.out.println("extension part3: " + extension);
} else{
       firstName=parts[3];
          System.out.println("Firstname part3: " + firstName); }




if (parts[4].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[4];
    System.out.println("middleInitial part4: " + middleInitial);
}  else  if (parts[4].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[4].replace(",","");
    System.out.println("extension 5: " + extension);
} else if (!parts[4].matches("[A-Z]"))
 {
   firstName +=" "+ parts[4];
    System.out.println("First Name part4: " + firstName);
}

if (parts[5].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[5];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[5].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[5].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[5].matches("[A-Z]"))
 {
   firstName +=" "+ parts[5];
    System.out.println("First Name5: " + firstName);
}

if (parts[6].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[6];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[6].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[6].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[6].matches("[A-Z]"))
 {
   firstName +=" "+ parts[6];
    System.out.println("First Name5: " + firstName);
}
     
      

        Random random = new Random();
        // Generate a 5-digit combination for RFID
        int digit1 = random.nextInt(10);
        int digit2 = random.nextInt(10);
        int digit3 = random.nextInt(10);
        int digit4 = random.nextInt(10);
        int digit5 = random.nextInt(10);
        int rfid = digit5 * 10000 + digit1 * 1000 + digit2 * 100 + digit3 * 10 + digit4;

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");
        Date currentDate = new Date();
        String formattedDate = dateFormat.format(currentDate);
        String formattedTime = timeFormat.format(currentDate);

        if (yearlvl.equals("1")) {
            yrlvl = "1st Year";
         
        }else if (yearlvl.equals("2")){
                yrlvl = "2nd Year";
        }
        else if (yearlvl.equals("3")){
                yrlvl = "3rd Year";
        }
        else if (yearlvl.equals("4")){
                yrlvl = "4th Year";
        }
          inputFormatting nameFormat = new inputFormatting();
        firstName = nameFormat.capitalizeWords(firstName);
        lastName = nameFormat.capitalizeWords(lastName);
          System.out.println("part1: " + part1);
System.out.println("studentID: " + studentID);
System.out.println("lastName: " + lastName);
System.out.println("firstName: " + firstName);
System.out.println("middleInitial: " + middleInitial);
System.out.println("yearlvl: " + yrlvl);
System.out.println("subject: " + subject);
System.out.println("addedBy: " + addedBy);
System.out.println("extension: " + extension);
System.out.println("mobileno: " + mobileno);
System.out.println("qrpath: " + qrpath);
System.out.println("email: " + email);

   //int rowsAffected = StudentDao.save(studentID, firstName, middleInitial, lastName, extension, email, mobileno, qrpath, addedBy, formattedDate, formattedTime, String.valueOf(rfid), savepath1, yrlvl, subject, subj2, subj3, subj4);
            
          /*  if (rowsAffected > 0) {
            

                output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Added Succesfully \n") ;
            } else {
              output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Already exist\n") ;
            }
   
    */
    
  
}   
                   if (parts.length==10){
                  yearlvl = parts[9];
                     if (yearlvl.equals("1")) {
            yrlvl = "1st Year";
         
        }else if (yearlvl.equals("2")){
                yrlvl = "2nd Year";
        }
        else if (yearlvl.equals("3")){
                yrlvl = "3rd Year";
        }
        else if (yearlvl.equals("4")){
                yrlvl = "4th Year";
        }
        if (parts[3].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[3].replace(",","");
    System.out.println("extension part3: " + extension);
} else{
       firstName=parts[3];
          System.out.println("Firstname part3: " + firstName); }




if (parts[4].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[4];
    System.out.println("middleInitial part4: " + middleInitial);
}  else  if (parts[4].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[4].replace(",","");
    System.out.println("extension 5: " + extension);
} else if (!parts[4].matches("[A-Z]"))
 {
   firstName +=" "+ parts[4];
    System.out.println("First Name part4: " + firstName);
}

if (parts[5].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[5];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[5].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[5].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[5].matches("[A-Z]"))
 {
   firstName +=" "+ parts[5];
    System.out.println("First Name5: " + firstName);
}

if (parts[6].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[6];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[6].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[6].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[6].matches("[A-Z]"))
 {
   firstName +=" "+ parts[6];
    System.out.println("First Name5: " + firstName);
}
if (parts[7].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[7];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[7].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[7].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[7].matches("[A-Z]"))
 {
   firstName +=" "+ parts[7];
    System.out.println("First Name5: " + firstName);
}
    
     
      

        Random random = new Random();
        // Generate a 5-digit combination for RFID
        int digit1 = random.nextInt(10);
        int digit2 = random.nextInt(10);
        int digit3 = random.nextInt(10);
        int digit4 = random.nextInt(10);
        int digit5 = random.nextInt(10);
        int rfid = digit5 * 10000 + digit1 * 1000 + digit2 * 100 + digit3 * 10 + digit4;

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");
        Date currentDate = new Date();
        String formattedDate = dateFormat.format(currentDate);
        String formattedTime = timeFormat.format(currentDate);

        if (yearlvl.equals("1")) {
            yrlvl = "1st Year";
         
        }else if (yearlvl.equals("2")){
                yrlvl = "2nd Year";
        }
        else if (yearlvl.equals("3")){
                yrlvl = "3rd Year";
        }
        else if (yearlvl.equals("4")){
                yrlvl = "4th Year";
        }
          inputFormatting nameFormat = new inputFormatting();
        firstName = nameFormat.capitalizeWords(firstName);
        lastName = nameFormat.capitalizeWords(lastName);
          System.out.println("part1: " + part1);
System.out.println("studentID: " + studentID);
System.out.println("lastName: " + lastName);
System.out.println("firstName: " + firstName);
System.out.println("middleInitial: " + middleInitial);
System.out.println("yearlvl: " + yrlvl);
System.out.println("subject: " + subject);
System.out.println("addedBy: " + addedBy);
System.out.println("extension: " + extension);
System.out.println("mobileno: " + mobileno);
System.out.println("qrpath: " + qrpath);
System.out.println("email: " + email);

   //int rowsAffected = StudentDao.save(studentID, firstName, middleInitial, lastName, extension, email, mobileno, qrpath, addedBy, formattedDate, formattedTime, String.valueOf(rfid), savepath1, yrlvl, subject, subj2, subj3, subj4);
            
          /*  if (rowsAffected > 0) {
            

                output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Added Succesfully \n") ;
            } else {
              output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Already exist\n") ;
            }
   
    */
    
  
} 
                         if (parts.length==11){
                  yearlvl = parts[10];
                     if (yearlvl.equals("1")) {
            yrlvl = "1st Year";
         
        }else if (yearlvl.equals("2")){
                yrlvl = "2nd Year";
        }
        else if (yearlvl.equals("3")){
                yrlvl = "3rd Year";
        }
        else if (yearlvl.equals("4")){
                yrlvl = "4th Year";
        }
        if (parts[3].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[3].replace(",","");
    System.out.println("extension part3: " + extension);
} else{
       firstName=parts[3];
          System.out.println("Firstname part3: " + firstName); }




if (parts[4].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[4];
    System.out.println("middleInitial part4: " + middleInitial);
}  else  if (parts[4].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[4].replace(",","");
    System.out.println("extension 5: " + extension);
} else if (!parts[4].matches("[A-Z]"))
 {
   firstName +=" "+ parts[4];
    System.out.println("First Name part4: " + firstName);
}

if (parts[5].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[5];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[5].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[5].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[5].matches("[A-Z]"))
 {
   firstName +=" "+ parts[5];
    System.out.println("First Name5: " + firstName);
}

if (parts[6].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[6];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[6].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[6].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[6].matches("[A-Z]"))
 {
   firstName +=" "+ parts[6];
    System.out.println("First Name5: " + firstName);
}
if (parts[7].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[7];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[7].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[7].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[7].matches("[A-Z]"))
 {
   firstName +=" "+ parts[7];
    System.out.println("First Name5: " + firstName);
}
if (parts[8].matches("[A-Z]\\.\\s*.*")) {
        middleInitial = parts[8];
    System.out.println("middleInitial: " + middleInitial);
    
}
     else  if (parts[8].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
    extension = parts[8].replace(",","");
    System.out.println("extension 5: " + extension);
} 
    else if (!parts[8].matches("[A-Z]"))
 {
   firstName +=" "+ parts[8];
    System.out.println("First Name5: " + firstName);
}
    
     
      

        Random random = new Random();
        // Generate a 5-digit combination for RFID
        int digit1 = random.nextInt(10);
        int digit2 = random.nextInt(10);
        int digit3 = random.nextInt(10);
        int digit4 = random.nextInt(10);
        int digit5 = random.nextInt(10);
        int rfid = digit5 * 10000 + digit1 * 1000 + digit2 * 100 + digit3 * 10 + digit4;

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");
        Date currentDate = new Date();
        String formattedDate = dateFormat.format(currentDate);
        String formattedTime = timeFormat.format(currentDate);

        if (yearlvl.equals("1")) {
            yrlvl = "1st Year";
         
        }else if (yearlvl.equals("2")){
                yrlvl = "2nd Year";
        }
        else if (yearlvl.equals("3")){
                yrlvl = "3rd Year";
        }
        else if (yearlvl.equals("4")){
                yrlvl = "4th Year";
        }
          inputFormatting nameFormat = new inputFormatting();
        firstName = nameFormat.capitalizeWords(firstName);
        lastName = nameFormat.capitalizeWords(lastName);
          System.out.println("part1: " + part1);
System.out.println("studentID: " + studentID);
System.out.println("lastName: " + lastName);
System.out.println("firstName: " + firstName);
System.out.println("middleInitial: " + middleInitial);
System.out.println("yearlvl: " + yrlvl);
System.out.println("subject: " + subject);
System.out.println("addedBy: " + addedBy);
System.out.println("extension: " + extension);
System.out.println("mobileno: " + mobileno);
System.out.println("qrpath: " + qrpath);
System.out.println("email: " + email);

   //int rowsAffected = StudentDao.save(studentID, firstName, middleInitial, lastName, extension, email, mobileno, qrpath, addedBy, formattedDate, formattedTime, String.valueOf(rfid), savepath1, yrlvl, subject, subj2, subj3, subj4);
            
          /*  if (rowsAffected > 0) {
            

                output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Added Succesfully \n") ;
            } else {
              output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Already exist\n") ;
            }
   
    */
    
  
} 
}
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(autoAdd1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(autoAdd1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(autoAdd1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(autoAdd1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new autoAdd1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addedby;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea output;
    private javax.swing.JTextArea students;
    private javax.swing.JTextField sub1;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
