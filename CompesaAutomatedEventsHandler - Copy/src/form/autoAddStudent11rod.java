/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import dbcon.DB;
import dbcon.StudentDao;
import dbcon.inputFormatting;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author RavenPC
 */
public class autoAddStudent11rod extends javax.swing.JPanel {
  String result;
 String[] parts;
 String yrlvl;
 String subj2="" , subj3="", subj4="",subj5="",subj6="";
    String savepath1="C:\\Documents\\CompesaEventHandler\\CompesaAutomatedEventsHandler\\img\\img\\cpelogo.png";
         String extension;
        String firstName;
           String part1;// First part
   String studentID ;
   String lastName ;

   String middleInitial = "";
   String yearlvl = "";
   String subject;
   String addedBy;
   
   String mobileno = "";
   String qrpath = "";
   String email = "";
    /**
     * Creates new form Panel1
     */
    public autoAddStudent11rod() {
        initComponents();
           SimpleDateFormat dateFormat = new SimpleDateFormat("MMMM-dd-YYYY");
        
          String currentTime = dateFormat.format(new Date());
          timeLabel.setText(currentTime);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(); // Create a DefaultComboBoxModel
DefaultComboBoxModel<String> comboBoxModel1 = new DefaultComboBoxModel<>(); // Create a DefaultComboBoxModel

try {
    // Establish a database connection
    Connection conn = DB.getConnection();
    Statement stmt = conn.createStatement();

    // Execute the SQL query
    ResultSet resultSet = stmt.executeQuery("SELECT classIdentity FROM subjects");

    // Populate the comboBoxModel with data from the database
    while (resultSet.next()) {
        String subjName = resultSet.getString("classIdentity");
        comboBoxModel.addElement(subjName);
     
          
    }

    // Set the model for your JComboBox
    jComboBox1.setModel(comboBoxModel);
 

    // Close the database connection
    conn.close();
} catch (Exception e) {
    e.printStackTrace();
}
try {
    // Establish a database connection
    Connection conn = DB.getConnection();
    Statement stmt = conn.createStatement();

    // Execute the SQL query
    ResultSet resultSet = stmt.executeQuery("SELECT name FROM admin");

    // Populate the comboBoxModel with data from the database
    while (resultSet.next()) {
        String name = resultSet.getString("name");
    
          comboBoxModel1.addElement(name);
          
    }

    // Set the model for your JComboBox
    jComboBox2.setModel(comboBoxModel1);
 

    // Close the database connection
    conn.close();
} catch (Exception e) {
    e.printStackTrace();
}



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        sub1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        addedby = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        timeLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        students = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(155, 156, 237));
        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("  PDF TO DB");
        jLabel1.setOpaque(true);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Ebrima", 1, 24)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeLabel.setText("jLabel2");

        students.setColumns(20);
        students.setRows(5);
        jScrollPane1.setViewportView(students);

        jButton1.setBackground(new java.awt.Color(102, 255, 51));
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        output.setEditable(false);
        output.setColumns(20);
        output.setRows(5);
        jScrollPane2.setViewportView(output);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sub1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addedby, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(timeLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sub1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addedby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
                String selectedItem = (String) jComboBox1.getSelectedItem();
          sub1.setText(selectedItem);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:    
        String selectedItem = (String) jComboBox2.getSelectedItem();
          addedby.setText(selectedItem);
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            subject = sub1.getText();
 addedBy = addedby.getText();
         if(addedBy.isEmpty() || subject.isEmpty()){
     JOptionPane.showMessageDialog(null, "Error: addedBy and/or subject is empty. Cannot proceed.", "Error", JOptionPane.ERROR_MESSAGE);
   }else{
 String text = students.getText();
 String[] inputRows = text.split("\n");
 ArrayList < String > rows = new ArrayList < String > ();

 for (String row: inputRows) {
   rows.add(row);
 }

 for (String row: rows) {

   System.out.println(row + "\n");
   String result = row;
   String[] parts = result.split(" ");
       part1 = parts[0];
   // Assign each part to another string depending on some condition
 
    studentID = parts[1]; // Second part
   lastName = parts[2].replace(",", ""); // Third part
    firstName = "";
    middleInitial = "";
    yearlvl = "";

  extension = "";
    mobileno = "";
    qrpath = "";
   email = "";
  
   System.out.println(parts.length);

   yearlvl = parts[parts.length - 1];

   if (yearlvl.equals("1")) {
     yrlvl = "1st Year";

   } else if (yearlvl.equals("2")) {
     yrlvl = "2nd Year";
   } else if (yearlvl.equals("3")) {
     yrlvl = "3rd Year";
   } else if (yearlvl.equals("4")) {
     yrlvl = "4th Year";
   }
   for (int i = 3; i <= parts.length - 3; i++) {
     if (parts[i].matches("[A-Z]\\.\\s*.*")) {
       middleInitial = parts[i];

     } else if (parts[i].replace(",", "").matches("JR\\.|SR\\.|[IVX]+|I{2,3}")) {
       extension = parts[i].replace(",", "");

     } else if (!parts[i].matches("[A-Z]")) {
       firstName += " " + parts[i];

     }

   }

   Random random = new Random();
   // Generate a 5-digit combination for RFID
   int digit1 = random.nextInt(10);
   int digit2 = random.nextInt(10);
   int digit3 = random.nextInt(10);
   int digit4 = random.nextInt(10);
   int digit5 = random.nextInt(10);
   int rfid = digit5 * 10000 + digit1 * 1000 + digit2 * 100 + digit3 * 10 + digit4;

   SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
   SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");
   Date currentDate = new Date();
   String formattedDate = dateFormat.format(currentDate);
   String formattedTime = timeFormat.format(currentDate);

   if (yearlvl.equals("1")) {
     yrlvl = "1st Year";

   } else if (yearlvl.equals("2")) {
     yrlvl = "2nd Year";
   } else if (yearlvl.equals("3")) {
     yrlvl = "3rd Year";
   } else if (yearlvl.equals("4")) {
     yrlvl = "4th Year";
   }
   inputFormatting nameFormat = new inputFormatting();
   firstName = nameFormat.capitalizeWords(firstName);
   lastName = nameFormat.capitalizeWords(lastName);
  

   int rowsAffected = StudentDao.save(studentID, firstName, middleInitial, lastName, extension, email, mobileno, qrpath, addedBy, formattedDate, formattedTime, String.valueOf(rfid), savepath1, yrlvl, subject, subj2, subj3, subj4,subj5,subj6);

    if (rowsAffected > 0) {
            

                output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Added Succesfully \n") ;
            } else {
           //   output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Already exist\n") ;
              
              int rowsAffected1 = StudentDao.updateSubj(studentID,subject);
    if (rowsAffected1 ==1 ) {
                output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Added new subject Succesfully \n") ;
            }else if(rowsAffected1==2){
                
                output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " subject duplicate Entry\n") ;
            } else {
             // output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " Already exist\n") ;
                 output.append(part1 + ", " +studentID + ", " + lastName + ", " + firstName + ", " + middleInitial + ", " + yearlvl + " " + subject+" is duplicated subject\n") ;
            
            }
   
            }
   
    

 }}
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addedby;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea output;
    private javax.swing.JTextArea students;
    private javax.swing.JTextField sub1;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
